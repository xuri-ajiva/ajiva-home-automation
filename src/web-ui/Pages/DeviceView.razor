@page "/DeviceView/{DeviceId}"    
@using web_ui.Services
@using web_ui.Data
@inject DeviceService _deviceService
@if (_device is null)
{
    <Alert Type="@AlertType.Error">Das Gerät konnte nicht gefunden werden.</Alert>
}
else
{
    <h3>@_device.Name</h3>

    <div style="display: flex; flex-wrap: wrap; gap: 2em">
        <AntList Split="true" Grid="new() { Gutter = 16, Xs = 1, Sm = 2, Md = 4, Lg = 4, Xl = 6, Xxl = 3,}" DataSource="@_device.Apparatus">
            <ListItem>
                <Apparatus Value="context"/>
            </ListItem>
        </AntList>
    </div>
}

@code {

    [Parameter]
    public string DeviceId { get; set; }

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _device = await _deviceService.GetDevice(DeviceId, true);
    }

    private Device? _device;
}
